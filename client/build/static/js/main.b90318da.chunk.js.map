{"version":3,"sources":["images/remove.svg","images/add.svg","serviceWorker.js","components/upload.jsx","components/app.jsx","Routes.js","index.js"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Upload","defaultSwears","swears","_this","inProgress","finished","message","progress","download","id","handleSubmit","e","preventDefault","formData","FormData","$","length","setState","append","JSON","stringify","ajax","type","enctype","url","data","processData","contentType","cache","timeout","success","status","errorMessage","handleOpen","concat","click","handleAddSwear","swear","val","test","alert","includes","push","handleRemoveSwear","confirm","splice","indexOf","handleClearSwears","handleKeyPress","keyEvent","keyCode","which","handleDownload","axios","href","method","responseType","res","URL","createObjectURL","Blob","link","document","createElement","setAttribute","body","appendChild","componentWillMount","channel","Pusher","cluster","forceTLS","subscribe","upload","Object","assertThisInitialized","bind","_this2","this","react_default","a","className","style","borderTopLeftRadius","borderBottomLeftRadius","display","width","flexDirection","justifyContent","src","marginBottom","undefined","controls","onClick","color","encType","accept","name","maxHeight","placeholder","onKeyPress","title","add","alt","remove","map","item","i","key","margin","borderTopRightRadius","borderBottomRightRadius","Component","App","getElementById","submit","components_upload","Routes","react_router_dom","react_router","exact","path","render","props","app","ReactDOM","src_Routes","process","origin","addEventListener","fetch","response","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b90318da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/remove.ebe22785.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.c15df4ff.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\nimport add from \"../images/add.svg\";\r\nimport remove from \"../images/remove.svg\";\r\nimport Pusher from \"pusher-js\";\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * This is the main application wrapper. Everything except for the login/signup pages is contained within this.\r\n */\r\nclass Upload extends Component {\r\n  defaultSwears = [\r\n    \"fuck\",\r\n    \"shit\",\r\n    \"bitch\",\r\n    \"bastard\",\r\n    \"fucker\",\r\n    \"hell\",\r\n    \"damn\",\r\n    \"dam\",\r\n    \"dick\",\r\n    \"dickhead\",\r\n    \"ass\",\r\n    \"asshole\",\r\n    \"dumbass\",\r\n    \"cunt\",\r\n    \"kike\",\r\n    \"pussy\",\r\n    \"twat\",\r\n    \"slut\",\r\n    \"ho\",\r\n    \"hoe\",\r\n    \"douche\",\r\n    \"douchebag\"\r\n  ];\r\n  state = {\r\n    swears: this.defaultSwears,\r\n    inProgress: false,\r\n    finished: false,\r\n    message: \"uploading...\",\r\n    progress: \"5%\",\r\n    download: \"\",\r\n    error: \"\",\r\n    id: \"\"\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let formData = new FormData($(\"#uploadForm\")[0]);\r\n    if (this.state.swears.length === 0) {\r\n      this.setState({ swears: this.defaultSwears });\r\n    }\r\n    formData.append(\"swears\", JSON.stringify(this.state.swears));\r\n    $.ajax({\r\n      type: \"POST\",\r\n      enctype: \"multipart/form-data\",\r\n      url: \"/upload\",\r\n      data: formData,\r\n      processData: false,\r\n      contentType: false,\r\n      cache: false,\r\n      timeout: 600000,\r\n      success: data => {\r\n        if (data.status === \"DONE\") {\r\n          this.setState({ finished: true });\r\n        } else {\r\n          console.log(data.error);\r\n          this.setState({ error: data.errorMessage });\r\n        }\r\n      },\r\n      error: data => {\r\n        console.log(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleOpen = id => {\r\n    $(`#${id}`).click();\r\n  };\r\n\r\n  handleAddSwear = () => {\r\n    let { swears } = this.state;\r\n    let swear = $(\"#addSwear\").val();\r\n    if (swear === \"\" || /^[ \\t\\r\\n\\s]*$/.test(swear)) {\r\n      window.alert(`You can't censor a blank word!`);\r\n      $(\"#addSwear\").val(\"\");\r\n      return;\r\n    }\r\n    if (swears.includes(swear)) {\r\n      window.alert(`You are already censoring ${swear}!`);\r\n      $(\"#addSwear\").val(\"\");\r\n      return;\r\n    }\r\n    swears.push(swear);\r\n    $(\"#addSwear\").val(\"\");\r\n    this.setState({ swears });\r\n  };\r\n\r\n  handleRemoveSwear = swear => {\r\n    if (window.confirm(`Are you sure you want to remove ${swear}?`)) {\r\n      let { swears } = this.state;\r\n      swears.splice(swears.indexOf(swear), 1);\r\n      this.setState({ swears });\r\n    }\r\n  };\r\n\r\n  handleClearSwears = swear => {\r\n    if (window.confirm(`Are you sure you want to remove all swears?`)) {\r\n      this.setState({ swears: [] });\r\n    }\r\n  };\r\n\r\n  handleKeyPress = keyEvent => {\r\n    var keyCode = keyEvent.keyCode || keyEvent.which;\r\n    if (keyCode === 13) {\r\n      this.handleAddSwear();\r\n    }\r\n  };\r\n\r\n  handleDownload = () => {\r\n    axios({\r\n      url: `${window.location.href}download\\\\${this.state.id}`,\r\n      method: \"GET\",\r\n      responseType: \"blob\"\r\n    }).then(res => {\r\n      console.log(res);\r\n      const url = window.URL.createObjectURL(new Blob([res.data]));\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", \"output.mp4\");\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    });\r\n  };\r\n\r\n  componentWillMount = () => {\r\n    let pusher = new Pusher(\"9477cf297ad61024ec6a\", {\r\n      cluster: \"us2\",\r\n      forceTLS: true\r\n    });\r\n    var channel = pusher.subscribe(\"progress\");\r\n    let upload = this;\r\n    channel.bind(\"update\", function(data) {\r\n      upload.setState({\r\n        message: data.message,\r\n        progress: data.progress,\r\n        inProgress: true,\r\n        finished: data.finished,\r\n        id: data.id\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.inProgress) {\r\n      return (\r\n        <div className=\"h-100 content\">\r\n          <form\r\n            encType=\"multipart/form-data\"\r\n            id=\"uploadForm\"\r\n            style={{ display: \"none\" }}\r\n          >\r\n            <input id=\"sfx\" type=\"file\" accept=\".mp3\" name=\"sfx\"></input>\r\n            <input id=\"video\" type=\"file\" accept=\"video/*\" name=\"video\"></input>\r\n          </form>\r\n          <div\r\n            className=\"container\"\r\n            style={{\r\n              borderTopLeftRadius: \"10px\",\r\n              borderBottomLeftRadius: \"10px\"\r\n            }}\r\n          >\r\n            <div style={{ maxHeight: \"100%\" }}>\r\n              <div className=\"container-header\">Select your swears</div>\r\n              <div className=\"container-body\">\r\n                <div className=\"list-container\">\r\n                  <div className=\"inl-form\">\r\n                    <input\r\n                      id=\"addSwear\"\r\n                      type=\"text\"\r\n                      placeholder=\"Add swears...\"\r\n                      onKeyPress={this.handleKeyPress}\r\n                      title=\"Add swear\"\r\n                    ></input>\r\n                    <button onClick={this.handleAddSwear} title=\"Add swear\">\r\n                      <img src={add} alt=\"add swear\"></img>\r\n                    </button>\r\n                    <button\r\n                      onClick={this.handleClearSwears}\r\n                      title=\"Clear swears\"\r\n                    >\r\n                      <img src={remove} alt=\"clear swears\"></img>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"list-items\">\r\n                    {this.state.swears.map((item, i) => {\r\n                      return (\r\n                        <li key={item}>\r\n                          <span>{item}</span>\r\n                          <img\r\n                            src={remove}\r\n                            onClick={() => {\r\n                              this.handleRemoveSwear(item);\r\n                            }}\r\n                            title={`Remove ${item}`}\r\n                            alt={`remove ${item}`}\r\n                          ></img>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <span className=\"button-link\" style={{ margin: \"5px 0px\" }}>\r\n                    or leave blank to use the default swears\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"container\">\r\n            <div className=\"container-header\">Upload custom SFX</div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\"\r\n              }}\r\n            >\r\n              <button\r\n                className=\"button-lg\"\r\n                onClick={() => {\r\n                  this.handleOpen(\"sfx\");\r\n                }}\r\n              >\r\n                Upload Audio...\r\n              </button>\r\n              <span className=\"button-link\">\r\n                or skip to use the default beep\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"container\">\r\n            <div className=\"container-header\">Upload video</div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\"\r\n              }}\r\n            >\r\n              <button\r\n                className=\"button-lg\"\r\n                onClick={() => {\r\n                  this.handleOpen(\"video\");\r\n                }}\r\n              >\r\n                Upload Video...\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"container\"\r\n            style={{\r\n              borderTopRightRadius: \"10px\",\r\n              borderBottomRightRadius: \"10px\"\r\n            }}\r\n          >\r\n            <div className=\"container-header\">Start!</div>\r\n            <button className=\"button-lg\" onClick={this.handleSubmit}>\r\n              Start!\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"h-100 content\">\r\n          <div\r\n            className=\"container\"\r\n            style={{\r\n              borderTopLeftRadius: \"10px\",\r\n              borderBottomLeftRadius: \"10px\"\r\n            }}\r\n          >\r\n            <div\r\n              id=\"progressBar\"\r\n              style={{ display: this.state.finished ? \"none\" : \"flex\" }}\r\n            >\r\n              <div\r\n                id=\"progressBar-inner\"\r\n                style={{ width: this.state.progress }}\r\n              >\r\n                {this.state.progress}\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: !this.state.finished ? \"none\" : \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\"\r\n              }}\r\n            >\r\n              <video\r\n                src={this.state.download}\r\n                style={{\r\n                  marginBottom: \"10px\",\r\n                  display:\r\n                    this.state.download === undefined ||\r\n                    this.state.download === \"\"\r\n                      ? \"none\"\r\n                      : \"block\"\r\n                }}\r\n                controls\r\n              ></video>\r\n              <button\r\n                className=\"button-lg\"\r\n                onClick={() => {\r\n                  this.handleDownload();\r\n                }}\r\n              >\r\n                Download Censored Video\r\n              </button>\r\n            </div>\r\n            <span\r\n              id=\"progressMessage\"\r\n              style={{\r\n                display: this.state.finished ? \"none\" : \"flex\",\r\n                color:\r\n                  this.state.error !== undefined && this.state.error !== \"\"\r\n                    ? \"red\"\r\n                    : \"white\"\r\n              }}\r\n            >\r\n              {this.state.error !== undefined && this.state.error !== \"\"\r\n                ? this.state.error\r\n                : this.state.message}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Upload;\r\n","import React, { Component } from \"react\";\r\nimport Upload from \"./upload\";\r\n\r\n/**\r\n * This is the main application wrapper. Everything except for the login/signup pages is contained within this.\r\n */\r\nclass App extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    document.getElementById(\"uploadForm\").submit();\r\n  };\r\n\r\n  render() {\r\n    return <Upload></Upload>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport App from \"./components/app\";\r\n\r\nclass Routes extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"h-100\">\r\n          <Route exact path=\"/\" render={props => <App />} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","/* Everything starts here */\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Routes from \"./Routes\";\r\n\r\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}